import esbuild from 'esbuild';
import process from 'process';
import builtins from 'builtin-modules';
import esbuildSvelte from 'esbuild-svelte';
import sveltePreprocess from 'svelte-preprocess';
import manifest from './manifest.json' assert { type: 'json' };

const banner = `/*
-------------------------------------------
${manifest.name} - Dev Build
-------------------------------------------
By: ${manifest.author} (${manifest.authorUrl})
Time: ${new Date().toUTCString()}
Version: Dev Build
-------------------------------------------
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const context = await esbuild
	.context({
		banner: {
			js: banner,
		},
		entryPoints: ['src/main.ts'],
		bundle: true,
		external: [
			'obsidian',
			'electron',
			'@codemirror/autocomplete',
			'@codemirror/collab',
			'@codemirror/commands',
			'@codemirror/language',
			'@codemirror/lint',
			'@codemirror/search',
			'@codemirror/state',
			'@codemirror/view',
			'@lezer/common',
			'@lezer/highlight',
			'@lezer/lr',
			...builtins,
		],
		format: 'cjs',
		target: 'es2018',
		logLevel: 'info',
		sourcemap: 'inline',
		treeShaking: true,
		outfile: 'main.js',
		plugins: [
			esbuildSvelte({
				compilerOptions: { css: 'injected' },
				preprocess: sveltePreprocess(),
				filterWarnings: warning => {
					// we don't want warnings from node modules that we can do nothing about
					return !warning.filename.includes('node_modules');
				},
			}),
		],
	})
	.catch(() => process.exit(1));

await context.watch();
